{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gomar\\\\Desktop\\\\mi-sitio-de-fotografia\\\\src\\\\components\\\\CarouselDisplay.js\",\n  _s = $RefreshSig$();\n// src/components/CarouselDisplay.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CarouselDisplay({\n  images\n}) {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const totalImages = images.length;\n\n  // Funciones para avanzar y retroceder\n  const goNext = () => {\n    setCurrentIndex((currentIndex + 1) % totalImages);\n  };\n  const goPrev = () => {\n    setCurrentIndex((currentIndex - 1 + totalImages) % totalImages);\n  };\n\n  // Obtención de las imágenes a mostrar\n  const getImagesToDisplay = () => {\n    let imagesToDisplay = [];\n\n    // Para la versión web (triplete o dúo)\n    if (window.innerWidth >= 768) {\n      imagesToDisplay = [images[(currentIndex - 1 + totalImages) % totalImages], images[currentIndex], images[(currentIndex + 1) % totalImages]];\n    } else {\n      // Versión móvil: solo una imagen\n      imagesToDisplay = [images[currentIndex]];\n    }\n    return imagesToDisplay;\n  };\n  const imagesToDisplay = getImagesToDisplay();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-images\",\n      children: imagesToDisplay.map((imgSrc, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgSrc,\n        alt: `Imagen ${index}`,\n        className: `carousel-image ${index === 1 ? 'central' : 'side'}`,\n        onClick: () => {\n          if (index === 0) goPrev();else if (index === 2) goNext();\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(CarouselDisplay, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = CarouselDisplay;\nexport default CarouselDisplay;\nvar _c;\n$RefreshReg$(_c, \"CarouselDisplay\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CarouselDisplay","images","_s","currentIndex","setCurrentIndex","totalImages","length","goNext","goPrev","getImagesToDisplay","imagesToDisplay","window","innerWidth","className","children","map","imgSrc","index","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gomar/Desktop/mi-sitio-de-fotografia/src/components/CarouselDisplay.js"],"sourcesContent":["// src/components/CarouselDisplay.js\r\nimport React, { useState } from 'react';\r\n\r\nfunction CarouselDisplay({ images }) {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  const totalImages = images.length;\r\n\r\n  // Funciones para avanzar y retroceder\r\n  const goNext = () => {\r\n    setCurrentIndex((currentIndex + 1) % totalImages);\r\n  };\r\n\r\n  const goPrev = () => {\r\n    setCurrentIndex((currentIndex - 1 + totalImages) % totalImages);\r\n  };\r\n\r\n  // Obtención de las imágenes a mostrar\r\n  const getImagesToDisplay = () => {\r\n    let imagesToDisplay = [];\r\n\r\n    // Para la versión web (triplete o dúo)\r\n    if (window.innerWidth >= 768) {\r\n      imagesToDisplay = [\r\n        images[(currentIndex - 1 + totalImages) % totalImages],\r\n        images[currentIndex],\r\n        images[(currentIndex + 1) % totalImages],\r\n      ];\r\n    } else {\r\n      // Versión móvil: solo una imagen\r\n      imagesToDisplay = [images[currentIndex]];\r\n    }\r\n\r\n    return imagesToDisplay;\r\n  };\r\n\r\n  const imagesToDisplay = getImagesToDisplay();\r\n\r\n  return (\r\n    <div className=\"carousel-container\">\r\n      <div className=\"carousel-images\">\r\n        {imagesToDisplay.map((imgSrc, index) => (\r\n          <img\r\n            key={index}\r\n            src={imgSrc}\r\n            alt={`Imagen ${index}`}\r\n            className={`carousel-image ${\r\n              index === 1 ? 'central' : 'side'\r\n            }`}\r\n            onClick={() => {\r\n              if (index === 0) goPrev();\r\n              else if (index === 2) goNext();\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CarouselDisplay;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,eAAeA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMQ,WAAW,GAAGJ,MAAM,CAACK,MAAM;;EAEjC;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBH,eAAe,CAAC,CAACD,YAAY,GAAG,CAAC,IAAIE,WAAW,CAAC;EACnD,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBJ,eAAe,CAAC,CAACD,YAAY,GAAG,CAAC,GAAGE,WAAW,IAAIA,WAAW,CAAC;EACjE,CAAC;;EAED;EACA,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIC,eAAe,GAAG,EAAE;;IAExB;IACA,IAAIC,MAAM,CAACC,UAAU,IAAI,GAAG,EAAE;MAC5BF,eAAe,GAAG,CAChBT,MAAM,CAAC,CAACE,YAAY,GAAG,CAAC,GAAGE,WAAW,IAAIA,WAAW,CAAC,EACtDJ,MAAM,CAACE,YAAY,CAAC,EACpBF,MAAM,CAAC,CAACE,YAAY,GAAG,CAAC,IAAIE,WAAW,CAAC,CACzC;IACH,CAAC,MAAM;MACL;MACAK,eAAe,GAAG,CAACT,MAAM,CAACE,YAAY,CAAC,CAAC;IAC1C;IAEA,OAAOO,eAAe;EACxB,CAAC;EAED,MAAMA,eAAe,GAAGD,kBAAkB,CAAC,CAAC;EAE5C,oBACEV,OAAA;IAAKc,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCf,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BJ,eAAe,CAACK,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACjClB,OAAA;QAEEmB,GAAG,EAAEF,MAAO;QACZG,GAAG,EAAE,UAAUF,KAAK,EAAG;QACvBJ,SAAS,EAAE,kBACTI,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,MAAM,EAC/B;QACHG,OAAO,EAAEA,CAAA,KAAM;UACb,IAAIH,KAAK,KAAK,CAAC,EAAET,MAAM,CAAC,CAAC,CAAC,KACrB,IAAIS,KAAK,KAAK,CAAC,EAAEV,MAAM,CAAC,CAAC;QAChC;MAAE,GATGU,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CAvDQF,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAyDxB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}