{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gomar\\\\Desktop\\\\mi-sitio-de-fotografia\\\\src\\\\components\\\\StarField.js\",\n  _s = $RefreshSig$();\n// src/components/StarField.js\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './StarField.css'; // Importar CSS específico para StarField\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarField = ({\n  numStars = 200,\n  // Número total de estrellas\n  className = '' // Clase adicional para personalización\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const stars = useRef([]);\n\n  // Clase Star para representar cada estrella\n  class Star {\n    constructor(x, y, radius, color) {\n      this.x = x;\n      this.y = y;\n      this.radius = radius;\n      this.color = color;\n      // Opacidad fija al 1 (100%)\n      this.opacity = 1;\n    }\n    draw(ctx) {\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n      ctx.fillStyle = `rgba(${this.color.r}, ${this.color.g}, ${this.color.b}, ${this.opacity})`;\n      ctx.fill();\n    }\n  }\n\n  // Inicializar estrellas\n  const initializeStars = (width, height) => {\n    stars.current = [];\n    for (let i = 0; i < numStars; i++) {\n      const x = Math.random() * width;\n      const y = Math.random() * height;\n      const radius = Math.random() * 0.5 + 0.5; // Tamaño de la estrella entre 0.5 y 3 píxeles\n      // Determinar el color (1% amarillo, 99% blanco)\n      const isYellow = Math.random() < 0.01;\n      const color = isYellow ? {\n        r: 255,\n        g: 255,\n        b: 224\n      } // Amarillo claro\n      : {\n        r: 255,\n        g: 255,\n        b: 255\n      }; // Blanco\n      stars.current.push(new Star(x, y, radius, color));\n    }\n  };\n\n  // Manejar el redimensionamiento del canvas\n  const resizeCanvas = canvas => {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    initializeStars(canvas.width, canvas.height);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    resizeCanvas(canvas);\n\n    // Redimensionar el canvas al cambiar el tamaño de la ventana\n    const handleResize = () => resizeCanvas(canvas);\n    window.addEventListener('resize', handleResize);\n    let animationFrameId;\n    const render = () => {\n      // Limpiar el canvas (sin dibujar el fondo)\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Dibujar las estrellas\n      stars.current.forEach(star => {\n        star.draw(ctx);\n      });\n      animationFrameId = requestAnimationFrame(render);\n    };\n    render();\n\n    // Cleanup on unmount\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [numStars]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `starfield-container ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"starfield-canvas\",\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n// Definir tipos de props y valores por defecto\n_s(StarField, \"zc/a/UAweehsOEZcEyW9svLQsfE=\");\n_c = StarField;\nStarField.propTypes = {\n  numStars: PropTypes.number,\n  className: PropTypes.string\n};\nStarField.defaultProps = {\n  numStars: 200,\n  className: ''\n};\nexport default StarField;\nvar _c;\n$RefreshReg$(_c, \"StarField\");","map":{"version":3,"names":["React","useRef","useEffect","PropTypes","jsxDEV","_jsxDEV","StarField","numStars","className","_s","canvasRef","stars","Star","constructor","x","y","radius","color","opacity","draw","ctx","beginPath","arc","Math","PI","fillStyle","r","g","b","fill","initializeStars","width","height","current","i","random","isYellow","push","resizeCanvas","canvas","window","innerWidth","innerHeight","getContext","handleResize","addEventListener","animationFrameId","render","clearRect","forEach","star","requestAnimationFrame","cancelAnimationFrame","removeEventListener","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","number","string","defaultProps","$RefreshReg$"],"sources":["C:/Users/gomar/Desktop/mi-sitio-de-fotografia/src/components/StarField.js"],"sourcesContent":["// src/components/StarField.js\r\nimport React, { useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './StarField.css'; // Importar CSS específico para StarField\r\n\r\nconst StarField = ({\r\n  numStars = 200, // Número total de estrellas\r\n  className = '', // Clase adicional para personalización\r\n}) => {\r\n  const canvasRef = useRef(null);\r\n  const stars = useRef([]);\r\n\r\n  // Clase Star para representar cada estrella\r\n  class Star {\r\n    constructor(x, y, radius, color) {\r\n      this.x = x;\r\n      this.y = y;\r\n      this.radius = radius;\r\n      this.color = color;\r\n      // Opacidad fija al 1 (100%)\r\n      this.opacity = 1;\r\n    }\r\n\r\n    draw(ctx) {\r\n      ctx.beginPath();\r\n      ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\r\n      ctx.fillStyle = `rgba(${this.color.r}, ${this.color.g}, ${this.color.b}, ${this.opacity})`;\r\n      ctx.fill();\r\n    }\r\n  }\r\n\r\n  // Inicializar estrellas\r\n  const initializeStars = (width, height) => {\r\n    stars.current = [];\r\n    for (let i = 0; i < numStars; i++) {\r\n      const x = Math.random() * width;\r\n      const y = Math.random() * height;\r\n      const radius = Math.random() * 0.5 + 0.5; // Tamaño de la estrella entre 0.5 y 3 píxeles\r\n      // Determinar el color (1% amarillo, 99% blanco)\r\n      const isYellow = Math.random() < 0.01;\r\n      const color = isYellow\r\n        ? { r: 255, g: 255, b: 224 } // Amarillo claro\r\n        : { r: 255, g: 255, b: 255 }; // Blanco\r\n      stars.current.push(new Star(x, y, radius, color));\r\n    }\r\n  };\r\n\r\n  // Manejar el redimensionamiento del canvas\r\n  const resizeCanvas = (canvas) => {\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n    initializeStars(canvas.width, canvas.height);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    resizeCanvas(canvas);\r\n\r\n    // Redimensionar el canvas al cambiar el tamaño de la ventana\r\n    const handleResize = () => resizeCanvas(canvas);\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    let animationFrameId;\r\n\r\n    const render = () => {\r\n      // Limpiar el canvas (sin dibujar el fondo)\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // Dibujar las estrellas\r\n      stars.current.forEach((star) => {\r\n        star.draw(ctx);\r\n      });\r\n\r\n      animationFrameId = requestAnimationFrame(render);\r\n    };\r\n\r\n    render();\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [numStars]);\r\n\r\n  return (\r\n    <div className={`starfield-container ${className}`}>\r\n      <canvas className=\"starfield-canvas\" ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Definir tipos de props y valores por defecto\r\nStarField.propTypes = {\r\n  numStars: PropTypes.number,\r\n  className: PropTypes.string,\r\n};\r\n\r\nStarField.defaultProps = {\r\n  numStars: 200,\r\n  className: '',\r\n};\r\n\r\nexport default StarField;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}